name: CI

on:
  push:
    branches: [main]
    tags: ["v*.*.*"]
  pull_request:

jobs:
  test:
    name: Tests (${{ matrix.os }} | Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Linux Qt-Libs
      - name: Set up Qt libraries
        if: runner.os == 'Linux'
        uses: tlambert03/setup-qt-libs@v1

      # Windows OpenGL
      - name: Install OpenGL on Windows
        if: runner.os == 'Windows'
        run: |
          git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel tox tox-gh-actions

      - name: Run tests with tox
        uses: aganders3/headless-gui@v1
        with:
          run: tox
        env:
          PLATFORM: ${{ matrix.os }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  build:
    name: Build package
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - run: python -m pip install --upgrade pip build
      - run: python -m build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish:
    name: Publish to PyPI
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - uses: pypa/gh-action-pypi-publish@release/v1

  release:
    name: GitHub Release
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - uses: sigstore/gh-action-sigstore-python@v3
        with:
          inputs: |
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        run: |
          gh release create "${{ github.ref_name }}" --repo "${{ github.repository }}" --notes ""
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload signatures
        run: |
          gh release upload "${{ github.ref_name }}" dist/** --repo "${{ github.repository }}"
        env:
          GITHUB_TOKEN: ${{ github.token }}
